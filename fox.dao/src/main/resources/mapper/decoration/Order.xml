<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.minutch.fox.dao.decoration.OrderDao">

    <resultMap id = "BaseResultMap" type = "com.minutch.fox.entity.decoration.Order"
               extends = "COMMON.BASE_RESULT_MAP">
        <result column = "header_id" property = "headerId" />
        <result column = "cus_id" property = "cusId" />
        <result column = "cus_name" property = "cusName" />
        <result column = "mobile_phone" property = "mobilePhone" />
        <result column = "house_name" property = "houseName" />
        <result column = "address" property = "address" />
        <result column = "goods_id" property = "goodsId" />
        <result column = "goods_name" property = "goodsName" />
        <result column = "goods_model" property = "goodsModel" />
        <result column = "goods_num" property = "goodsNum" />
        <result column = "use_num" property = "useNum" />
        <result column = "handle_stock" property = "handleStock" />
        <result column = "goods_price" property = "goodsPrice" />
        <result column = "in_goods_price" property = "inGoodsPrice" />
        <result column = "order_amount" property = "orderAmount" />
        <result column = "return_amount" property = "returnAmount" />
        <result column = "remind_time" property = "remindTime" />
        <result column = "be_finish" property = "beFinish" />
        <result column = "store_id" property = "storeId" />
        <result column = "emp_id" property = "empId" />
        <result column = "remark" property = "remark" />
    </resultMap>


    <resultMap id = "orderViewMap" type = "com.minutch.fox.view.decoration.OrderView">
        <result column = "id" property = "id" />
        <result column = "gmt_create" property = "gmtCreate" />
        <result column = "header_id" property = "headerId" />
        <result column = "cus_id" property = "cusId" />
        <result column = "cus_name" property = "cusName" />
        <result column = "mobile_phone" property = "mobilePhone" />
        <result column = "house_name" property = "houseName" />
        <result column = "order_sn" property = "orderSn" />
        <result column = "address" property = "address" />
        <result column = "goods_id" property = "goodsId" />
        <result column = "goods_name" property = "goodsName" />
        <result column = "goods_model" property = "goodsModel" />
        <result column = "goods_num" property = "goodsNum" />
        <result column = "use_num" property = "useNum" />
        <result column = "handle_stock" property = "handleStock" />
        <result column = "goods_price" property = "goodsPrice" />
        <result column = "in_goods_price" property = "inGoodsPrice" />
        <result column = "order_amount" property = "orderAmount" />
        <result column = "return_amount" property = "returnAmount" />
        <result column = "remind_time" property = "remindTime" />
        <result column = "be_finish" property = "beFinish" />
        <result column = "store_id" property = "storeId" />
        <result column = "emp_id" property = "empId" />
        <result column = "remark" property = "remark" />
    </resultMap>



    <resultMap id = "orderGoodsViewMap" type = "com.minutch.fox.view.decoration.OrderGoodsView">
        <result column = "goods_name" property = "goodsName" />
        <result column = "goods_model" property = "goodsModel" />
        <result column = "goods_num" property = "goodsNum" />
    </resultMap>

    <resultMap id = "hotGoodsViewMap" type = "com.minutch.fox.view.decoration.HotGoodsView">
        <result column = "goods_name" property = "goodsName" />
        <result column = "goods_model" property = "goodsModel" />
        <result column = "goods_num" property = "goodsNum" />
        <result column = "goods_amount" property = "goodsAmount" />
    </resultMap>



    <sql id = "BaseWhereClause">
        <where>
            <trim prefixOverrides = "and">
                <include refid = "COMMON.BASE_WHERE_CLAUSE" />
                <if test = "headerId != null">
                    and header_id = #{headerId}
                </if>
                <if test = "cusId != null">
                    and cus_id = #{cusId}
                </if>
                <if test = "cusName != null">
                    and cus_name = #{cusName}
                </if>
                <if test = "mobilePhone != null">
                    and mobile_phone = #{mobilePhone}
                </if>
                <if test = "houseName != null">
                    and house_name = #{houseName}
                </if>
                <if test = "address != null">
                    and address = #{address}
                </if>
                <if test = "goodsId != null">
                    and goods_id = #{goodsId}
                </if>
                <if test = "goodsName != null">
                    and goods_name = #{goodsName}
                </if>
                <if test = "goodsModel != null">
                    and goods_model = #{goodsModel}
                </if>
                <if test = "goodsNum != null">
                    and goods_num = #{goodsNum}
                </if>
                <if test = "useNum != null">
                    and use_num = #{useNum}
                </if>
                <if test = "handleStock != null">
                    and handle_stock = #{handleStock}
                </if>
                <if test = "goodsPrice != null">
                    and goods_price = #{goodsPrice}
                </if>
                <if test = "inGoodsPrice != null">
                    and in_goods_price = #{inGoodsPrice}
                </if>
                <if test = "orderAmount != null">
                    and order_amount = #{orderAmount}
                </if>
                <if test = "returnAmount != null">
                    and return_amount = #{returnAmount}
                </if>
                <if test = "remindTime != null">
                    and remind_time = #{remindTime}
                </if>
                <if test = "beFinish != null">
                    and be_finish = #{beFinish}
                </if>
                <if test = "storeId != null">
                    and store_id = #{storeId}
                </if>
                <if test = "empId != null">
                    and emp_id = #{empId}
                </if>
                <if test = "remark != null">
                    and remark = #{remark}
                </if>
            </trim>
        </where>
    </sql>

    <sql id = "BaseUpdateSet">
        <set>
            <include refid = "COMMON.BASE_UPDATE_SET" />
            <if test = "headerId != null">
                header_id = #{headerId},
            </if>
            <if test = "cusId != null">
                cus_id = #{cusId},
            </if>
            <if test = "cusName != null">
                cus_name = #{cusName},
            </if>
            <if test = "mobilePhone != null">
                mobile_phone = #{mobilePhone},
            </if>
            <if test = "houseName != null">
                house_name = #{houseName},
            </if>
            <if test = "address != null">
                address = #{address},
            </if>
            <if test = "goodsId != null">
                goods_id = #{goodsId},
            </if>
            <if test = "goodsName != null">
                goods_name = #{goodsName},
            </if>
            <if test = "goodsModel != null">
                goods_model = #{goodsModel},
            </if>
            <if test = "goodsNum != null">
                goods_num = #{goodsNum},
            </if>
            <if test = "useNum != null">
                use_num = #{useNum},
            </if>
            <if test = "handleStock != null">
                handle_stock = #{handleStock},
            </if>
            <if test = "goodsPrice != null">
                goods_price = #{goodsPrice},
            </if>
            <if test = "inGoodsPrice != null">
                in_goods_price = #{inGoodsPrice},
            </if>
            <if test = "orderAmount != null">
                order_amount = #{orderAmount},
            </if>
            <if test = "returnAmount != null">
                return_amount = #{returnAmount},
            </if>
            <if test = "remindTime != null">
                remind_time = #{remindTime},
            </if>
            <if test = "beFinish != null">
                be_finish = #{beFinish},
            </if>
            <if test = "storeId != null">
                store_id = #{storeId},
            </if>
            <if test = "empId != null">
                emp_id = #{empId},
            </if>
            <if test = "remark != null">
                remark = #{remark}
            </if>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id = "selectCount" resultType = "java.lang.Integer">
        select count(id)
        from decoration_order
        <include refid = "BaseWhereClause" />
    </select>

    <!-- 查询 -->
    <select id = "select" resultMap = "BaseResultMap">
        select
        <include refid = "COMMON.ALL_COLUMN_LIST" />
        from decoration_order
        <include refid = "BaseWhereClause" />
        <include refid = "COMMON.ORDER_BY" />
        <include refid = "COMMON.LIMIT" />
    </select>

    <!-- 根据ID查询 -->
    <select id = "selectById" resultMap = "BaseResultMap">
        select
        <include refid = "COMMON.ALL_COLUMN_LIST" />
        from decoration_order
        where id = #{id}
    </select>

    <!-- 根据IDS批量删除 -->
    <update id = "deleteByIds">
        update decoration_order
        set is_deleted='Y'
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id = "deleteById">
        update decoration_order
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id = "delete">
        update decoration_order
        set is_deleted='Y'
        <include refid = "BaseWhereClause" />
    </delete>

    <!-- 添加   -->
    <insert id = "insert" useGeneratedKeys = "true" keyProperty = "id">
        insert into decoration_order (
        <include refid = "COMMON.BASE_INSERT_COLUMN" />
        header_id,
        cus_id,
        cus_name,
        mobile_phone,
        house_name,
        address,
        goods_id,
        goods_name,
        goods_model,
        goods_num,
        use_num,
        handle_stock,
        goods_price,
        in_goods_price,
        order_amount,
        return_amount,
        remind_time,
        be_finish,
        store_id,
        emp_id,
        remark
        )
        values (
        <include refid = "COMMON.BASE_INSERT_VALUE" />
        #{headerId},
        #{cusId},
        #{cusName},
        #{mobilePhone},
        #{houseName},
        #{address},
        #{goodsId},
        #{goodsName},
        #{goodsModel},
        #{goodsNum},
        #{useNum},
        #{handleStock},
        #{goodsPrice},
        #{inGoodsPrice},
        #{orderAmount},
        #{returnAmount},
        #{remindTime},
        #{beFinish},
        #{storeId},
        #{empId},
        #{remark}
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id = "updateById">
        update decoration_order
        <include refid = "BaseUpdateSet" />
        where id = #{id}
    </update>


    <!-- 根据条件查询订单总数 -->
    <select id="queryOrderCount" resultType="java.lang.Integer">
        select count(*)
        from decoration_order o
        right join decoration_order_header h
        on o.header_id = h.id
        where o.is_deleted = 'N'
        and h.is_deleted = 'N'
        <include refid="queryOrderCond" />
    </select>

    <!-- 根据条件查询订单数据 -->
    <select id="queryOrder" resultMap="orderViewMap">
        select
        o.id,
        o.gmt_create,
        o.header_id,
        h.cus_id,
        h.cus_name,
        h.mobile_phone,
        h.house_name,
        h.address,
        h.order_sn,
        o.goods_id,
        o.goods_name,
        o.goods_model,
        o.goods_num,
        o.goods_price,
        o.in_goods_price,
        o.order_amount,
        o.remind_time,
        o.be_finish,
        o.store_id,
        o.emp_id,
        o.remark
        from decoration_order o
        right join decoration_order_header h
        on o.header_id = h.id
        where o.is_deleted = 'N'
        and h.is_deleted = 'N'
        <include refid="queryOrderCond" />
        order by o.id desc
        limit #{start},#{limit}
    </select>


    <sql id="queryOrderCond">
        and o.store_id = #{param.storeId}
        <if test="param.keyword!=null and param.keyword!=''">
            and
            (
            h.cus_name  like concat('%',#{param.keyword},'%')
            or h.mobile_phone like concat('%',#{param.keyword},'%')
            or h.house_name like concat('%',#{param.keyword},'%')
            )
        </if>
        <if test="param.beFinish!=null and param.beFinish!=''">
            and o.be_finish = #{param.beFinish}
        </if>
        <if test="param.remindStatus != null">
            and o.remind_status = #{param.remindStatus}
        </if>
        <if test="param.cusId!=null">
            and h.cus_id = #{param.cusId}
        </if>
        <if test="param.queryTimeStart!=null and param.queryTimeStart!='' and param.queryTimeEnd!=null and param.queryTimeEnd!=''">
            and o.remind_time between #{param.queryTimeStart} and #{param.queryTimeEnd}
        </if>
        <if test="param.gmtCreateStart!=null and param.gmtCreateStart!='' and param.gmtCreateEnd!=null and param.gmtCreateEnd!=''">
            and o.gmt_create between #{param.gmtCreateStart} and #{param.gmtCreateEnd}
        </if>
    </sql>



    <!-- 根据headerId查询 -->
    <select id = "queryByHeaderId" resultMap = "BaseResultMap">
        select *
        from decoration_order
        where is_deleted = 'N'
        and header_id = #{headerId}
    </select>

    <!-- 查询需要发货的订单 -->
    <select id = "queryByNeedSendOrder" resultMap = "BaseResultMap">
        select *
        from decoration_order
        where is_deleted = 'N'
        and header_id = #{headerId}
        and handle_stock = 0
        and use_num > 0
    </select>

    <!-- 更新已发货信息信息 -->
    <update id = "sendOrderByIdList">
        update decoration_order
        set gmt_modified = now(),
        handle_stock = 1
        where id in (
        <foreach collection = "idList" index = "index" item = "id" separator = ",">
            #{id}
        </foreach>
        )
    </update>

    <!-- 订单结款 -->
    <update id = "finishById">
        update decoration_order
        set gmt_modified = now(),
        be_finish = 'Y'
        where id = #{orderId}
    </update>

    <!-- 订单处理 -->
    <update id = "handleRemindById">
        update decoration_order
        set gmt_modified = now(),
        remind_status = 1
        where id = #{orderId}
        and remind_status = 0
    </update>


    <!-- 根据ids查询 -->
    <select id = "queryByIds" resultMap = "BaseResultMap">
        select *
        from decoration_order
        where is_deleted = 'N'
        and id in (
        <foreach collection = "idList" index = "index" item = "id" separator = ",">
            #{id}
        </foreach>
        )
    </select>


    <!-- 订单退货 -->
    <update id = "handleReturnOrder">
        update decoration_order
        set gmt_modified = now(),
        goods_num = goods_num-#{goodsNum},
        order_amount = order_amount-#{orderAmount}
        where id = #{orderId}
    </update>


    <!-- 查询时间范围内的商品销售 -->
    <select id="queryOrderGoodsNumByTime" resultMap="orderGoodsViewMap">
        select goods_name,goods_Model,sum(goods_num) as goods_num
        from decoration_order
        where is_deleted ='N'
        and store_id=#{param.storeId}
        and gmt_create between #{param.startTime} and #{param.endTime}
        group by goods_name,goods_Model
        order by goods_num desc
    </select>


    <!-- 统计最近3个月的高销售额商品 -->
    <select id="reportHotGoodsByAmount" resultMap="hotGoodsViewMap">
         select goods_name,sum(goods_num * goods_price) as goods_amount
        from decoration_order
        where store_id=#{storeId}
        and gmt_create > #{fromTime}
        and is_deleted = 'N'
        group by goods_name
        order by goods_amount desc
        limit 10
    </select>


    <!-- 统计最近3个月的高销量商品 -->
    <select id="reportHotGoodsByNum" resultMap="hotGoodsViewMap">
        select goods_name,sum(goods_num) as goods_num
        from decoration_order
        where store_id=#{storeId}
        and gmt_create > #{fromTime}
        and is_deleted = 'N'
        and is_deleted = 'N'
        group by goods_name
        order by goods_num desc
        limit 10
    </select>

</mapper>
