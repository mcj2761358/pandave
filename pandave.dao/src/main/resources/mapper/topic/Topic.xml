<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.minutch.pandave.dao.topic.TopicDao">

    <resultMap id = "BaseResultMap" type = "com.minutch.pandave.entity.topic.Topic"
               extends = "COMMON.BASE_RESULT_MAP">
        <result column = "platform_tid" property = "platformTid" />
        <result column = "title" property = "title" />
        <result column = "content" property = "content" />
        <result column = "img" property = "img" />
        <result column = "author_name" property = "authorName" />
        <result column = "author_id" property = "authorId" />
        <result column = "author_img" property = "authorImg" />
        <result column = "topic_create_time" property = "topicCreateTime" />
        <result column = "topic_modify_time" property = "topicModifyTime" />
        <result column = "last_follow_time" property = "lastFollowTime" />
        <result column = "vote_count" property = "voteCount" />
        <result column = "comment_count" property = "commentCount" />
    </resultMap>

    <resultMap id = "TopicAnswerView" type = "com.minutch.pandave.view.topic.TopicAnswerView">
        <result column = "topic_id" property = "topicId" />
        <result column = "topic_title" property = "topicTitle" />
        <result column = "topic_content" property = "topicContent" />
        <result column = "answer_id" property = "answerId" />
        <result column = "answer_modify_time" property = "answerModifyTime" />
        <result column = "answer_author_name" property = "answerAuthorName" />
        <result column = "answer_author_sign" property = "answerAuthorSign" />
        <result column = "answer_content" property = "answerContent" />
        <result column = "answer_vote" property = "answerVote" />
    </resultMap>

    <sql id = "BaseWhereClause">
        <where>
            <trim prefixOverrides = "and">
                <include refid = "COMMON.BASE_WHERE_CLAUSE" />
                <if test = "platformTid != null">
                    and platform_tid = #{platformTid}
                </if>
                <if test = "title != null">
                    and title = #{title}
                </if>
                <if test = "content != null">
                    and content = #{content}
                </if>
                <if test = "img != null">
                    and img = #{img}
                </if>
                <if test = "authorName != null">
                    and author_name = #{authorName}
                </if>
                <if test = "authorId != null">
                    and author_id = #{authorId}
                </if>
                <if test = "authorImg != null">
                    and author_img = #{authorImg}
                </if>
                <if test = "topicCreateTime != null">
                    and topic_create_time = #{topicCreateTime}
                </if>
                <if test = "topicModifyTime != null">
                    and topic_modify_time = #{topicModifyTime}
                </if>
                <if test = "lastFollowTime != null">
                    and last_follow_time = #{lastFollowTime}
                </if>
                <if test = "voteCount != null">
                    and vote_count = #{voteCount}
                </if>
                <if test = "commentCount != null">
                    and comment_count = #{commentCount}
                </if>
            </trim>
        </where>
    </sql>

    <sql id = "BaseUpdateSet">
        <set>
            <include refid = "COMMON.BASE_UPDATE_SET" />
            <if test = "platformTid != null">
                platform_tid = #{platformTid},
            </if>
            <if test = "title != null">
                title = #{title},
            </if>
            <if test = "content != null">
                content = #{content},
            </if>
            <if test = "img != null">
                img = #{img},
            </if>
            <if test = "authorName != null">
                author_name = #{authorName},
            </if>
            <if test = "authorId != null">
                author_id = #{authorId},
            </if>
            <if test = "authorImg != null">
                author_img = #{authorImg},
            </if>
            <if test = "topicCreateTime != null">
                topic_create_time = #{topicCreateTime},
            </if>
            <if test = "topicModifyTime != null">
                topic_modify_time = #{topicModifyTime},
            </if>
            <if test = "lastFollowTime != null">
                last_follow_time = #{lastFollowTime},
            </if>
            <if test = "voteCount != null">
                vote_count = #{voteCount},
            </if>
            <if test = "commentCount != null">
                comment_count = #{commentCount}
            </if>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id = "selectCount" resultType = "java.lang.Integer">
        select count(id)
        from pandave_topic
        <include refid = "BaseWhereClause" />
    </select>

    <!-- 查询 -->
    <select id = "select" resultMap = "BaseResultMap">
        select
        <include refid = "COMMON.ALL_COLUMN_LIST" />
        from pandave_topic
        <include refid = "BaseWhereClause" />
        <include refid = "COMMON.ORDER_BY" />
        <include refid = "COMMON.LIMIT" />
    </select>

    <!-- 根据ID查询 -->
    <select id = "selectById" resultMap = "BaseResultMap">
        select
        <include refid = "COMMON.ALL_COLUMN_LIST" />
        from pandave_topic
        where id = #{id}
    </select>

    <!-- 根据IDS批量删除 -->
    <update id = "deleteByIds">
        update pandave_topic
        set is_deleted='Y'
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id = "deleteById">
        update pandave_topic
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id = "delete">
        update pandave_topic
        set is_deleted='Y'
        <include refid = "BaseWhereClause" />
    </delete>

    <!-- 添加   -->
    <insert id = "insert" useGeneratedKeys = "true" keyProperty = "id">
        insert into pandave_topic (
        <include refid = "COMMON.BASE_INSERT_COLUMN" />
        platform_tid,
        title,
        content,
        img,
        author_name,
        author_id,
        author_img,
        topic_create_time,
        topic_modify_time,
        last_follow_time,
        vote_count,
        comment_count
        )
        values (
        <include refid = "COMMON.BASE_INSERT_VALUE" />
        #{platformTid},
        #{title},
        #{content},
        #{img},
        #{authorName},
        #{authorId},
        #{authorImg},
        #{topicCreateTime},
        #{topicModifyTime},
        #{lastFollowTime},
        #{voteCount},
        #{commentCount}
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id = "updateById">
        update pandave_topic
        <include refid = "BaseUpdateSet" />
        where id = #{id}
    </update>

    <!-- 根据条件查询话题总数 -->
    <select id="queryTopicCount" resultType="java.lang.Integer">
        select count(*)
        from pandave_topic
        where is_deleted = 'N'
        <if test="param.keyword!=null and param.keyword!=''">
            and
            (
            title  like concat('%',#{param.keyword},'%')
            )
        </if>
    </select>

    <!-- 根据条件查询话题数据 -->
    <select id="queryTopic" resultMap="BaseResultMap">
        select *
        from pandave_topic
        where is_deleted = 'N'
        <if test="param.keyword!=null and param.keyword!=''">
            and
            (
            title  like concat('%',#{param.keyword},'%')
            )
        </if>
        order by id desc
        limit #{start},#{limit}
    </select>

    <!-- 根据条件查询话题回复总数 -->
    <select id="queryTopicAnswerCount" resultType="java.lang.Integer">
        select count(t.id)
        from pandave_topic t
        join pandave_topic_answer s
        on t.id = s.topic_id
    </select>

    <!-- 根据条件查询话题回复数据 -->
    <select id="queryTopicAnswer" resultMap="TopicAnswerView">
        select
        t.id as topic_id,
        t.title as topic_title,
        t.content as topic_content,
        s.id as answer_id,
        s.answer_modify_time as answer_modify_time,
        s.author_name as answer_author_name,
        s.author_sign as answer_author_sign,
        s.content as answer_content,
        s.vote_count as answer_vote
        from pandave_topic t
        join pandave_topic_answer s
        on t.id = s.topic_id
        order by s.vote_count desc
        limit #{start},#{limit}
    </select>

    <!-- 根据answerId查询 -->
    <select id="queryAnswerDetail" resultMap="TopicAnswerView">
        select
        t.id as topic_id,
        t.title as topic_title,
        t.content as topic_content,
        s.id as answer_id,
        s.answer_modify_time as answer_modify_time,
        s.author_name as answer_author_name,
        s.author_sign as answer_author_sign,
        s.content as answer_content,
        s.vote_count as answer_vote
        from pandave_topic t
        join pandave_topic_answer s
        on t.id = s.topic_id and s.id = #{answerId}
    </select>
</mapper>
